// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons
@use "../functions/color-utils";
@use "../functions/button-utils";
@use "gradients";
@use "box-shadow";
@use "border-radius";
@use "rfs";
@use "../variables/buttons";
@use "../variables/color-contrast";
@use "../variables/features";

// scss-docs-start btn-variant-mixin
@mixin button-variant(
    $background,
    $border,
    $color: color-utils.color-contrast($background),
    $hover-background:
      if(
        $color == color-contrast.$color-contrast-light,
        color-utils.shade-color($background, buttons.$btn-hover-bg-shade-amount),
        color-utils.tint-color($background, buttons.$btn-hover-bg-tint-amount)
      ),
    $hover-border:
      if(
        $color == color-contrast.$color-contrast-light,
        color-utils.shade-color($border, buttons.$btn-hover-border-shade-amount),
        color-utils.tint-color($border, buttons.$btn-hover-border-tint-amount)
      ),
    $hover-color: color-utils.color-contrast($hover-background),
    $active-background:
      if(
        $color == color-contrast.$color-contrast-light,
        color-utils.shade-color($background, buttons.$btn-active-bg-shade-amount),
        color-utils.tint-color($background, buttons.$btn-active-bg-tint-amount)
      ),
    $active-border:
      if(
        $color == color-contrast.$color-contrast-light,
        color-utils.shade-color($border, buttons.$btn-active-border-shade-amount),
        color-utils.tint-color($border, buttons.$btn-active-border-tint-amount)
      ),
    $active-color: color-utils.color-contrast($active-background),
    $disabled-background: $background,
    $disabled-border: $border,
    $disabled-color: color-utils.color-contrast($disabled-background)
) {
    color: $color;
    @include gradients.gradient-bg($background);
    border-color: $border;
    @include box-shadow.box-shadow(buttons.$btn-box-shadow);

    &:hover {
        color: $hover-color;
        @include gradients.gradient-bg($hover-background);
        border-color: $hover-border;
    }

    &:focus {
        color: $hover-color;
        @include gradients.gradient-bg($hover-background);
        border-color: $hover-border;
    }

    &:active,
    &.active,
    .show > &.dropdown-toggle {
        color: $active-color;
        background-color: $active-background;
        // Remove CSS gradients if they're enabled
        background-image: if(features.$enable-gradients, none, null);
        border-color: $active-border;

        &:focus {
            box-shadow: buttons.$btn-focus-box-shadow;
        }
    }

    &:disabled,
    &.disabled {
        color: $disabled-color;
        background-color: $disabled-background;
        // Remove CSS gradients if they're enabled
        background-image: if(features.$enable-gradients, none, null);
        border-color: $disabled-border;
    }
}

// scss-docs-end btn-variant-mixin

// scss-docs-start btn-outline-variant-mixin
@mixin button-outline-variant(
    $color,
    $hover-background: rgba($color, 0.05),
    $hover-color: $color,
    $active-background: rgba($color, 0.05),
    $active-border: $color,
    $active-color: $color
) {
    color: $color;
    border-color: $color;

    &:hover {
        color: $hover-color;
        background-color: $hover-background;
    }

    &:focus {
        color: $color;
        background-color: transparent;
    }

    &:active,
    &.active,
    &.dropdown-toggle.show {
        color: $active-color;
        background-color: $active-background;
        border-color: $active-border;

        &:focus {
            box-shadow: none;
        }
    }

    &:disabled,
    &.disabled {
        color: $color;
        border-color: $color;
        background-color: transparent;
    }
}

// scss-docs-end btn-outline-variant-mixin

// scss-docs-start btn-size-mixin
@mixin button-size(
    $padding-top,
    $padding-right,
    $padding-bottom,
    $padding-left,
    $font-size,
    $font-weight,
    $border-radius,
    $line-height
) {
    $padding-bottom-modified: button-utils.btn-padding-bottom(
            $padding-top,
            $padding-bottom,
            buttons.$btn-text-transform,
            $font-size,
    );
    padding: $padding-top $padding-right $padding-bottom-modified $padding-left;
    line-height: $line-height;
    font-weight: $font-weight;
    // Manually declare to provide an override to the browser default
    @include border-radius.border-radius($border-radius, 0);
    @include rfs.font-size($font-size);
}

// Button size variant outline
@mixin button-outline-size(
    $padding-top,
    $padding-right,
    $padding-bottom,
    $padding-left,
    $font-size,
) {
    $padding-bottom-modified: button-utils.btn-padding-bottom(
            $padding-top,
            $padding-bottom,
            buttons.$btn-text-transform,
            $font-size,
    );
    padding: $padding-top $padding-right $padding-bottom-modified $padding-left;
}

// scss-docs-end btn-size-mixin
