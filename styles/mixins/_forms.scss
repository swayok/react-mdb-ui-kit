// This mixin uses an `if()` technique to be compatible with Dart Sass
// See https://github.com/sass/sass/issues/1873#issuecomment-152293725 for more details

@use "../functions/color-utils";
@use "../functions/string-utils";
@use "rfs";
@use "border-radius";
@use "../variables/tooltip";
@use "../variables/form-input-base";
@use "../variables/form-validation";
@use "../variables/features";
@use "../variables/colors";
@use "../variables/form-select";

// scss-docs-start form-validation-mixins
@mixin form-validation-state-selector($state) {
    @if ($state == 'valid' or $state == 'invalid') {
        .was-validated #{if(&, "&", "")}:#{$state},
        #{if(&, "&", "")}.is-#{$state} {
            @content;
        }
    } @else {
        #{if(&, "&", "")}.is-#{$state} {
            @content;
        }
    }
}

@mixin form-validation-state(
    $state,
    $color,
    $icon,
    $tooltip-color: color-utils.color-contrast($color),
    $tooltip-bg-color: rgba($color, tooltip.$form-feedback-tooltip-opacity),
    $focus-box-shadow: 0 0 0 form-input-base.$input-focus-box-shadow-width rgba($color, form-input-base.$input-focus-box-shadow-color-opacity)
) {
    .#{$state}-feedback {
        position: absolute;
        display: none;
        width: auto;
        margin-top: form-validation.$form-feedback-margin-top;
        margin-left: form-validation.$form-feedback-margin-left;
        font-style: form-validation.$form-feedback-font-style;
        color: $color;
        @include rfs.font-size(form-validation.$form-feedback-font-size);
    }

    .#{$state}-tooltip {
        position: absolute;
        top: 100%;
        z-index: 5;
        display: none;
        max-width: 100%; // Contain to parent when possible
        padding: tooltip.$form-feedback-tooltip-padding-y tooltip.$form-feedback-tooltip-padding-x;
        margin-top: 0.1rem;
        line-height: tooltip.$form-feedback-tooltip-line-height;
        color: $tooltip-color;
        background-color: $tooltip-bg-color;
        @include border-radius.border-radius(tooltip.$form-feedback-tooltip-border-radius);
        @include rfs.font-size(tooltip.$form-feedback-tooltip-font-size);
    }

    @include form-validation-state-selector($state) {
        ~ .#{$state}-feedback,
        ~ .#{$state}-tooltip {
            display: block;
        }
    }

    .form-control {
        @include form-validation-state-selector($state) {
            margin-bottom: 1rem;
            background-image: none;
            border-color: $color;

            @if features.$enable-validation-icons {
                padding-right: form-input-base.$input-height-inner;
                background-image: string-utils.escape-svg($icon);
                background-repeat: no-repeat;
                background-position: right form-input-base.$input-height-inner-quarter center;
                background-size: form-input-base.$input-height-inner-half form-input-base.$input-height-inner-half;
            }

            &:focus {
                border-color: $color;
                box-shadow: $focus-box-shadow;
            }
        }
    }

    .form-outline {
        .form-control {
            @include form-validation-state-selector($state) {
                ~ .form-label {
                    color: $color;
                }

                ~ .form-notch .form-notch-leading,
                ~ .form-notch .form-notch-middle,
                ~ .form-notch .form-notch-trailing {
                    border-color: $color;
                }
            }
        }
    }

    // stylelint-disable-next-line selector-no-qualifying-type
    textarea.form-control {
        @include form-validation-state-selector($state) {
            @if features.$enable-validation-icons {
                padding-right: form-input-base.$input-height-inner;
                background-position: top form-input-base.$input-height-inner-quarter right form-input-base.$input-height-inner-quarter;
            }
        }
    }

    .form-select {
        @include form-validation-state-selector($state) {
            border-color: $color;

            @if features.$enable-validation-icons {
                &:not([multiple]):not([size]),
                &:not([multiple])[size='1'] {
                    padding-right: form-select.$form-select-feedback-icon-padding-end;
                    background-image: string-utils.escape-svg(form-select.$form-select-indicator), string-utils.escape-svg($icon);
                    background-position: form-select.$form-select-bg-position, form-select.$form-select-feedback-icon-position;
                    background-size: form-select.$form-select-bg-size, form-select.$form-select-feedback-icon-size;
                }
            }

            &:focus {
                border-color: $color;
                box-shadow: $focus-box-shadow;
            }

            ~ .#{$state}-feedback {
                margin-top: 0;
            }
        }
    }

    .form-check-input {
        @include form-validation-state-selector($state) {
            border-color: $color;

            &:checked {
                background-color: $color;
            }

            &:focus {
                box-shadow: $focus-box-shadow;
            }

            ~ .form-check-label {
                color: $color;
            }
        }
    }
    .form-check-inline .form-check-input {
        ~ .#{$state}-feedback {
            margin-left: 0.5em;
        }
    }

    .input-group .form-control,
    .input-group .form-select {
        @include form-validation-state-selector($state) {
            margin-bottom: 0;
            @if $state == 'valid' {
                z-index: 1;
            } @else if $state == 'invalid' {
                z-index: 2;
            }
            &:focus {
                z-index: 3;
            }
        }
    }

    input[type='file'].form-control {
        @include form-validation-state-selector($state) {
            .#{$state}-feedback {
                margin-top: 0;
            }

            &:focus {
                box-shadow: inset 0 0 0 1px $color;
                border-color: $color;

                ~ .form-file-label {
                    box-shadow: none;
                }
            }

            &:focus-within {
                ~ .form-file-label {
                    .form-file-text,
                    .form-file-button {
                        border-color: $color;
                    }
                }
            }
        }
    }

    .form-check-input {
        @include form-validation-state-selector($state) {
            border-color: $color;

            &:checked {
                background-color: $color;
            }

            &:checked {
                &:focus {
                    &:before {
                        box-shadow: 0 0 0 13px $color;
                    }
                }
            }

            &:focus {
                box-shadow: none;

                &:before {
                    box-shadow: 0 0 0 13px $color;
                }
            }

            ~ .form-check-label {
                color: $color;
                margin-bottom: 1rem;
            }

            &[type='checkbox'] {
                &:checked {
                    &:focus {
                        background-color: $color;
                        border-color: $color;
                    }
                }
            }

            &[type='radio'] {
                &:checked {
                    border-color: $color;
                    background-color: colors.$white;

                    &:focus {
                        &:before {
                            box-shadow: 0 0 0 13px $color;
                        }
                    }

                    &:after {
                        border-color: $color;
                        background-color: $color;
                    }
                }
            }
        }
    }

    .form-check-inline .form-check-input {
        ~ .#{$state}-feedback {
            margin-left: 0.5em;
        }
    }
}

// scss-docs-end form-validation-mixins
