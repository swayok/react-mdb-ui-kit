@use '../mixins/breakpoints';
@use '../mixins/css-grid';
@use '../variables/grid';
@use "../variables/features";

@if (features.$include-helpers and features.$include-css-grid-helpers) {
    .d-grid {
        display: grid;
        justify-content: stretch;
        justify-items: stretch;
        align-items: flex-start;
    }

    .grid-items-align-top {
        align-items: flex-start !important;
    }

    .grid-items-align-middle {
        align-items: center !important;
    }

    .grid-items-align-bottom {
        align-items: flex-end !important;
    }

    .grid-columns-auto-fit-100 {
        grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    }

    .grid-columns-auto-fit-200 {
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }

    .grid-columns-auto-fit-300 {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }

    .grid-rows-same-height-auto {
        grid-auto-rows: auto;
    }

    .grid-rows-same-height-min-content {
        grid-auto-rows: min-content;
    }

    .grid-rows-same-height-max-content {
        grid-auto-rows: max-content;
    }

    @each $breakpoint in map-keys(grid.$grid-breakpoints) {
        $infix: breakpoints.breakpoint-infix($breakpoint, grid.$grid-breakpoints);

        @include breakpoints.media-breakpoint-up($breakpoint) {
            @include css-grid.css-grid-classes($infix);
        }
    }
}
