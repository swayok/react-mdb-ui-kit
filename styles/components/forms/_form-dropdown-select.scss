// Select input with dropdown (<Dropdown> component for options).
@use "../../mixins/svg-icons";
@use "../../variables/form-input-base";
@use "../../variables/form-label";
@use "../../variables/form-dropdown-select";
@use "../../variables/dropdown";
@use "../../variables/features";

@if (features.$include-forms-and-inputs and features.$include-dropdown-select-input) {

    // <FormSelect> и <FormSelectBasic> - выбор значения из выпадающего списка.
    .form-dropdown-select {

        .dropdown-toggle {
            position: relative;

            input,
            input[readonly] {
                background-color: form-input-base.$input-bg;
                cursor: pointer;
                padding-right: form-dropdown-select.$form-dropdown-select-padding-right;
                user-select: none;
            }

            input[disabled] {
                cursor: not-allowed;
                background-color: form-input-base.$input-disabled-bg;
            }
        }

        &:not(.mode-inline) {
            .chevron {
                position: absolute;
                right: form-dropdown-select.$form-dropdown-select-chevron-offset-x;
                top: 50%;
                margin-top: -12px;
                @include svg-icons.mdi-icon-color(form-dropdown-select.$form-dropdown-select-chevron-color);
            }
        }

        .dropdown-menu {
            &.form-multiselect-dropdown.show {
                display: flex;
                flex-direction: column;
                align-items: stretch;
                justify-content: flex-start;

                &.stick-selected-options-to-top {
                    .dropdown-item {
                        order: 1;

                        &.active {
                            order: 0;
                        }
                    }
                }
            }

            &.form-dropdown-select-menu-dropup-offset {
                inset: auto auto form-dropdown-select.$form-dropdown-select-dropup-offset 0 !important;
            }
        }

        .dropdown-item {
            border-radius: 0;

            &.empty-option:not(.active) {
                color: form-dropdown-select.$form-dropdown-select-empty-option-color;
            }

            &.active {
                background-color: dropdown.$dropdown-item-active-bg;
            }

            &.form-multiselect-dropdown-option {
                &.disabled,
                &[disabled] {
                    pointer-events: auto;
                }

                &.active {
                    background-color: transparent;

                    &:hover,
                    &:focus {
                        background-color: dropdown.$dropdown-item-hover-bg;
                    }
                }
            }

            &:not(.form-multiselect-dropdown-option):not(.text-*) {
                @include svg-icons.contained-mdi-icon-color-in-link(
                        dropdown.$dropdown-item-color !important,
                        dropdown.$dropdown-item-color !important,
                        dropdown.$dropdown-item-disabled-color !important
                );
                @include svg-icons.contained-custom-svg-icon-color-in-link(
                        dropdown.$dropdown-item-color !important,
                        dropdown.$dropdown-item-color !important,
                        dropdown.$dropdown-item-disabled-color !important
                );
            }
        }

        input.empty-option-selected {
            color: form-dropdown-select.$form-dropdown-select-empty-option-selected-color;
        }
    }
}
