// Alert.
@use "sass:color";
@use "sass:math";
@use "../functions/color-utils";
@use "../mixins/alert" as alert-mixins;
@use "../mixins/border-radius";
@use "../variables/features";
@use "../variables/alert";
@use "../variables/z-index";
@use "../variables/color-contrast";
@use "../variables/color-lists";

@if (features.$include-alert) {
    .alert {
        position: relative;
        padding: alert.$alert-padding-y alert.$alert-padding-x;
        margin-bottom: alert.$alert-margin-bottom;
        border: alert.$alert-border-width solid transparent;
        @include border-radius.border-radius(alert.$alert-border-radius);
    }

    // Headings for larger alerts
    .alert-heading {
        // Specified to prevent conflicts of changing $headings-color
        color: inherit;
    }

    // Provide class for links that match alerts
    .alert-link {
        font-weight: alert.$alert-link-font-weight;
    }

    // Dismissible alerts
    //
    // Expand the right padding and account for the close button's positioning.

    .alert-dismissible {
        padding-right: alert.$alert-dismissible-padding-r;

        // Adjust close link position
        .btn-close {
            position: absolute;
            top: 0;
            right: 0;
            z-index: alert.$alert-dismissible-close-button-z-index + 1;
            padding: alert.$alert-padding-y * 1.25 alert.$alert-padding-x;
        }
    }

    // scss-docs-start alert-modifiers
    // Generate contextual modifier classes for colorizing the alert.

    @each $state, $value in color-lists.$alert-colors {
        $alert-background: color-utils.shift-color($value, alert.$alert-bg-scale);
        $alert-border: color-utils.shift-color($value, alert.$alert-border-scale);
        $alert-color: color-utils.shift-color($value, alert.$alert-color-scale);
        @if (color-utils.contrast-ratio($alert-background, $alert-color) < color-contrast.$min-contrast-ratio) {
            $alert-color: color.mix($value, color-utils.color-contrast($alert-background), math.abs(alert.$alert-color-scale));
        }
        .alert-#{$state} {
            @include alert-mixins.alert-variant($alert-background, $alert-border, $alert-color);
        }
    }

    // scss-docs-end alert-modifiers

    // MDB Additional styles

    .alert-absolute {
        position: absolute;
    }

    .alert-fixed {
        position: fixed;
        z-index: z-index.$z-index-alert;
    }

    .parent-alert-relative {
        position: relative;
    }
}
