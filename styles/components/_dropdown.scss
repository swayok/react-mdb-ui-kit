// Dropdown menu, toggle and contents.
@use "sass:map";
@use "../mixins/transition";
@use "../mixins/caret";
@use "../mixins/rfs";
@use "../mixins/border-radius";
@use "../mixins/box-shadow";
@use "../mixins/breakpoints";
@use "../mixins/gradients";
@use "../variables/z-index";
@use "../variables/dropdown";
@use "../variables/features";
@use "../variables/grid";

@if (features.$include-dropdown) {
    // The dropdown wrapper (`<div>`)
    .dropup,
    .dropend,
    .dropdown,
    .dropstart {
        position: relative;
    }

    .dropdown-toggle {
        white-space: nowrap;

        // Generate the caret automatically
        @include caret.caret();
    }

    // The dropdown menu
    .dropdown-menu {
        position: absolute;
        z-index: z-index.$z-index-dropdown;
        display: none; // none by default, but block on "open" of the menu
        min-width: dropdown.$dropdown-min-width;
        padding: dropdown.$dropdown-padding-y dropdown.$dropdown-padding-x;
        margin: 0; // Override default margin of ul
        color: dropdown.$dropdown-color;
        text-align: left; // Ensures proper alignment if parent has it changed (e.g., modal footer)
        list-style: none;
        background-color: dropdown.$dropdown-bg;
        background-clip: padding-box;
        border: dropdown.$dropdown-border-width solid dropdown.$dropdown-border-color;
        box-shadow: dropdown.$dropdown-box-shadow;
        overflow-y: auto;
        @include border-radius.border-radius(dropdown.$dropdown-border-radius);
        @include rfs.font-size(dropdown.$dropdown-font-size);

        &[data-mdb-popper] {
            top: 100%;
            left: 0;
            margin-top: dropdown.$dropdown-spacer;
        }

        &.animation {
            display: block;
            /* Speed up animations */
            animation-duration: dropdown.$dropdown-menu-animation-duration;
            animation-timing-function: dropdown.$dropdown-menu-animation-timing-function;
        }
    }

    // scss-docs-start responsive-breakpoints
    // We deliberately hardcode the `bs-` prefix because we check
    // this custom property in JS to determine Popper's positioning

    @each $breakpoint in map.keys(grid.$grid-breakpoints) {
        @include breakpoints.media-breakpoint-up($breakpoint) {
            $infix: breakpoints.breakpoint-infix($breakpoint, grid.$grid-breakpoints);

            .dropdown-menu#{$infix}-start {
                --bs-position: start;

                &[data-mdb-popper] {
                    /*!rtl:ignore*/
                    right: auto;
                    /*!rtl:ignore*/
                    left: 0;
                }
            }

            .dropdown-menu#{$infix}-end {
                --bs-position: end;

                &[data-mdb-popper] {
                    /*!rtl:ignore*/
                    right: 0;
                    /*!rtl:ignore*/
                    left: auto;
                }
            }
        }
    }

    // scss-docs-end responsive-breakpoints

    // Allow for dropdowns to go bottom up (aka, dropup-menu)
    // Just add .dropup after the standard .dropdown class and you're set.
    .dropup {
        .dropdown-menu[data-mdb-popper] {
            top: auto;
            bottom: 100%;
            margin-top: 0;
            margin-bottom: dropdown.$dropdown-spacer;
        }

        .dropdown-toggle {
            @include caret.caret(up);
        }
    }

    .dropend {
        .dropdown-menu[data-mdb-popper] {
            top: 0;
            right: auto;
            left: 100%;
            margin-top: 0;
            margin-left: dropdown.$dropdown-spacer;
        }

        .dropdown-toggle {
            @include caret.caret(end);

            &::after {
                vertical-align: 0;
            }
        }
    }

    .dropstart {
        .dropdown-menu[data-mdb-popper] {
            top: 0;
            right: 100%;
            left: auto;
            margin-top: 0;
            margin-right: dropdown.$dropdown-spacer;
        }

        .dropdown-toggle {
            @include caret.caret(start);

            &::before {
                vertical-align: 0;
            }
        }
    }

    // Dividers (basically an `<hr>`) within the dropdown
    .dropdown-divider {
        height: 0;
        margin: dropdown.$dropdown-divider-margin-y 0;
        overflow: hidden;
        border-top: 1px solid dropdown.$dropdown-divider-bg;
    }

    // Links, buttons, and more within the dropdown menu
    //
    // `<button>`-specific styles are denoted with `// For <button>s`
    .dropdown-item {
        display: block;
        width: 100%; // For `<button>`s
        padding: dropdown.$dropdown-item-padding-y dropdown.$dropdown-item-padding-x;
        clear: both;
        font-weight: dropdown.$dropdown-item-font-weight;
        color: dropdown.$dropdown-item-color;
        text-align: inherit; // For `<button>`s
        text-decoration: dropdown.$dropdown-item-text-decoration;
        white-space: nowrap; // prevent links from randomly breaking onto new lines
        background-color: transparent; // For `<button>`s
        border: 0; // For `<button>`s
        cursor: pointer;
        @include transition.transition(dropdown.$dropdown-item-transition);

        // Prevent dropdown overflow if there's no padding
        // See https://github.com/twbs/bootstrap/pull/27703
        @if dropdown.$dropdown-padding-y == 0 {
            &:first-child {
                @include border-radius.border-top-radius(dropdown.$dropdown-inner-border-radius);
            }

            &:last-child {
                @include border-radius.border-bottom-radius(dropdown.$dropdown-inner-border-radius);
            }
        }

        &:hover,
        &:focus {
            color: dropdown.$dropdown-item-hover-color;
            text-decoration: dropdown.$dropdown-item-hover-text-decoration;
            @include gradients.gradient-bg(dropdown.$dropdown-item-hover-bg);
        }

        &.active,
        &:active {
            color: dropdown.$dropdown-item-active-color;
            text-decoration: none;
            @include gradients.gradient-bg(dropdown.$dropdown-item-active-bg);
        }

        &.disabled,
        &:disabled {
            color: dropdown.$dropdown-item-disabled-color;
            pointer-events: none;
            cursor: not-allowed;
            background-color: transparent;
            // Remove CSS gradients if they're enabled
            background-image: if(features.$enable-gradients, none, null);
        }
    }

    .dropdown-menu.show {
        display: block;
    }

    // Dropdown section headers
    .dropdown-header {
        display: block;
        padding: dropdown.$dropdown-header-padding;
        margin-bottom: 0; // for use with heading elements
        font-weight: dropdown.$dropdown-header-font-weight;
        color: dropdown.$dropdown-header-color;
        white-space: nowrap; // as with > li > a
        @include rfs.font-size(dropdown.$dropdown-header-font-size);
    }

    // Dropdown text
    .dropdown-item-text {
        display: block;
        padding: dropdown.$dropdown-item-padding-y dropdown.$dropdown-item-padding-x;
        color: dropdown.$dropdown-item-color;
    }

    // Dark dropdowns
    .dropdown-menu-dark {
        color: dropdown.$dropdown-dark-color;
        background-color: dropdown.$dropdown-dark-bg;
        border-color: dropdown.$dropdown-dark-border-color;
        @include box-shadow.box-shadow(dropdown.$dropdown-dark-box-shadow);

        .dropdown-item {
            color: dropdown.$dropdown-dark-link-color;

            &:hover,
            &:focus {
                color: dropdown.$dropdown-dark-link-hover-color;
                @include gradients.gradient-bg(dropdown.$dropdown-dark-link-hover-bg);
            }

            &.active,
            &:active {
                color: dropdown.$dropdown-dark-link-active-color;
                @include gradients.gradient-bg(dropdown.$dropdown-dark-link-active-bg);
            }

            &.disabled,
            &:disabled {
                color: dropdown.$dropdown-dark-link-disabled-color;
            }
        }

        .dropdown-divider {
            border-color: dropdown.$dropdown-dark-divider-bg;
        }

        .dropdown-item-text {
            color: dropdown.$dropdown-dark-link-color;
        }

        .dropdown-header {
            color: dropdown.$dropdown-dark-header-color;
        }
    }
}
