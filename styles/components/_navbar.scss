// Navbar.
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

// Contents:
// Navbar
// Navbar brand
// Navbar nav
// Navbar text
// Responsive navbar
// Navbar position
// Navbar themes
@use "../functions/string-utils";
@use "../mixins/transition";
@use "../mixins/gradients";
@use "../mixins/breakpoints";
@use "../mixins/rfs";
@use "../mixins/border-radius";
@use "../variables/nav";
@use "../variables/features";
@use "../variables/grid";
@use "../variables/links";
@use "../variables/css-variables";

@if (features.$include-navbar) {
    .navbar {
        position: relative;
        display: flex;
        flex-wrap: wrap; // allow us to do the line break for collapsing content
        align-items: center;
        justify-content: space-between; // space out brand from logo
        //noinspection CssReplaceWithShorthandSafely
        padding-top: nav.$navbar-padding-top;
        //noinspection CssReplaceWithShorthandSafely
        padding-right: nav.$navbar-padding-x; // default: null
        //noinspection CssReplaceWithShorthandSafely
        padding-bottom: nav.$navbar-padding-bottom;
        //noinspection CssReplaceWithShorthandSafely
        padding-left: nav.$navbar-padding-x; // default: null
        box-shadow: nav.$navbar-box-shadow;
        @include gradients.gradient-bg();

        // Because flex properties aren't inherited, we need to redeclare these first
        // few properties so that content nested within behave properly.
        // The `flex-wrap` property is inherited to simplify the expanded navbars
        %container-flex-properties {
            display: flex;
            flex-wrap: inherit;
            align-items: center;
            justify-content: space-between;
        }

        > .container,
        > .container-fluid {
            @extend %container-flex-properties;
        }

        @each $breakpoint, $container-max-width in grid.$container-max-widths {
            > .container#{breakpoints.breakpoint-infix($breakpoint, grid.$container-max-widths)} {
                @extend %container-flex-properties;
            }
        }
    }

    // Navbar brand
    //
    // Used for brand, project, or site names.

    .navbar-brand {
        display: flex;
        align-items: center;
        padding-top: nav.$navbar-brand-padding-y;
        padding-bottom: nav.$navbar-brand-padding-y;
        margin-right: nav.$navbar-brand-margin-end;
        @include rfs.font-size(nav.$navbar-brand-font-size);
        text-decoration: if(links.$link-decoration == none, null, none);
        white-space: nowrap;

        &:hover,
        &:focus {
            text-decoration: if(links.$link-hover-decoration == underline, none, null);
        }

        img {
            margin-right: nav.$navbar-brand-img-margin-right;
        }
    }

    // Navbar nav
    //
    // Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).

    .navbar-nav {
        display: flex;
        flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
        padding-left: 0;
        margin-bottom: 0;
        list-style: none;

        .nav-link {
            padding-right: 0;
            padding-left: 0;
        }

        .dropdown-menu {
            position: absolute;
        }
    }

    // Navbar text
    //
    //

    .navbar-text {
        padding-top: nav.$nav-link-padding-y;
        padding-bottom: nav.$nav-link-padding-y;
    }

    // Responsive navbar
    //
    // Custom styles for responsive collapsing and toggling of navbar contents.
    // Powered by the collapse Bootstrap JavaScript plugin.

    // When collapsed, prevent the toggleable navbar contents from appearing in
    // the default flexbox row orientation. Requires the use of `flex-wrap: wrap`
    // on the `.navbar` parent.
    .navbar-collapse {
        flex-basis: 100%;
        flex-grow: 1;
        // For always expanded or extra full navbars, ensure content aligns itself
        // properly vertically. Can be easily overridden with flex utilities.
        align-items: center;
    }

    // Button for toggling the navbar when in its collapsed state
    .navbar-toggler {
        padding: nav.$navbar-toggler-padding-y nav.$navbar-toggler-padding-x;
        @include rfs.font-size(nav.$navbar-toggler-font-size);
        line-height: 1;
        background-color: transparent; // remove default button style
        border: nav.$navbar-toggler-border-width solid transparent; // remove default button style
        @include border-radius.border-radius(nav.$navbar-toggler-border-radius);
        @include transition.transition(nav.$navbar-toggler-transition);

        &:hover {
            text-decoration: none;
        }

        &:focus {
            text-decoration: none;
            outline: 0;
            box-shadow: nav.$navbar-toggler-focus-box-shadow;
        }
    }

    // Keep as a separate element so folks can easily override it with another icon
    // or image file as needed.
    .navbar-toggler-icon {
        display: inline-block;
        width: 1.5em;
        height: 1.5em;
        vertical-align: middle;
        background-repeat: no-repeat;
        background-position: center;
        background-size: 100%;
    }

    .navbar-nav-scroll {
        max-height: var(--#{css-variables.$variable-prefix}scroll-height, 75vh);
        overflow-y: auto;
    }

    // scss-docs-start navbar-expand-loop
    // Generate series of `.navbar-expand-*` responsive classes for configuring
    // where your navbar collapses.
    .navbar-expand {
        @each $breakpoint in map-keys(grid.$grid-breakpoints) {
            $next: breakpoints.breakpoint-next($breakpoint, grid.$grid-breakpoints);
            $infix: breakpoints.breakpoint-infix($next, grid.$grid-breakpoints);

            // stylelint-disable-next-line scss/selector-no-union-class-name
            &#{$infix} {
                @include breakpoints.media-breakpoint-up($next) {
                    flex-wrap: nowrap;
                    justify-content: flex-start;

                    .navbar-nav {
                        flex-direction: row;

                        .dropdown-menu {
                            position: absolute;
                        }

                        .nav-link {
                            padding-right: nav.$navbar-nav-link-padding-x;
                            padding-left: nav.$navbar-nav-link-padding-x;
                        }
                    }

                    .navbar-nav-scroll {
                        overflow: visible;
                    }

                    .navbar-collapse {
                        display: flex !important; // stylelint-disable-line declaration-no-important
                        flex-basis: auto;
                    }

                    .navbar-toggler {
                        display: none;
                    }
                }
            }
        }
    }

    // scss-docs-end navbar-expand-loop

    // Navbar themes
    //
    // Styles for switching between navbars with light or dark background.

    // Dark links against a light background
    .navbar-light {
        .navbar-brand {
            color: nav.$navbar-light-brand-color;

            &:hover,
            &:focus {
                color: nav.$navbar-light-brand-hover-color;
            }
        }

        .navbar-nav {
            .nav-link {
                color: nav.$navbar-light-color;

                &:hover,
                &:focus {
                    color: nav.$navbar-light-hover-color;
                }

                &.disabled {
                    color: nav.$navbar-light-disabled-color;
                }
            }

            .show > .nav-link,
            .nav-link.active {
                color: nav.$navbar-light-active-color;
            }
        }

        .navbar-toggler {
            color: nav.$navbar-light-color;
            border-color: nav.$navbar-light-toggler-border-color;
        }

        .navbar-toggler-icon {
            background-image: string-utils.escape-svg(nav.$navbar-light-toggler-icon-bg);
        }

        .navbar-text {
            color: nav.$navbar-light-color;

            a,
            a:hover,
            a:focus {
                color: nav.$navbar-light-active-color;
            }
        }
    }

    // White links against a dark background
    .navbar-dark {
        .navbar-brand {
            color: nav.$navbar-dark-brand-color;

            &:hover,
            &:focus {
                color: nav.$navbar-dark-brand-hover-color;
            }
        }

        .navbar-nav {
            .nav-link {
                color: nav.$navbar-dark-color;

                &:hover,
                &:focus {
                    color: nav.$navbar-dark-hover-color;
                }

                &.disabled {
                    color: nav.$navbar-dark-disabled-color;
                }
            }

            .show > .nav-link,
            .nav-link.active {
                color: nav.$navbar-dark-active-color;
            }
        }

        .navbar-toggler {
            color: nav.$navbar-dark-color;
            border-color: nav.$navbar-dark-toggler-border-color;
        }

        .navbar-toggler-icon {
            background-image: string-utils.escape-svg(nav.$navbar-dark-toggler-icon-bg);
        }

        .navbar-text {
            color: nav.$navbar-dark-color;

            a,
            a:hover,
            a:focus {
                color: nav.$navbar-dark-active-color;
            }
        }
    }
}
