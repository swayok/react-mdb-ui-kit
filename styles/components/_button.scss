// Buttons
@use "../mixins/buttons" as buttons-mixins;
@use "../mixins/box-shadow";
@use "../mixins/border-radius";
@use "../mixins/transition";
@use "../mixins/rfs";
@use "../variables/colors";
@use "../variables/color-lists";
@use "../variables/body";
@use "../variables/buttons";
@use "../variables/features";
@use "../variables/links";

@if (features.$include-buttons) {
    .btn {
        display: inline-block;
        font-family: buttons.$btn-font-family;
        color: body.$body-color;
        text-align: center;
        text-decoration: if(links.$link-decoration == none, null, none);
        text-transform: buttons.$btn-text-transform;
        white-space: buttons.$btn-white-space;
        vertical-align: bottom;
        cursor: if(features.$enable-button-pointers, pointer, null);
        user-select: none;
        background-color: transparent;
        border: buttons.$btn-border-width solid transparent;
        @include box-shadow.box-shadow(buttons.$btn-box-shadow);
        @include buttons-mixins.button-size(
                buttons.$btn-padding-top,
                buttons.$btn-padding-x,
                buttons.$btn-padding-bottom,
                buttons.$btn-padding-x,
                buttons.$btn-font-size,
                buttons.$btn-font-weight,
                buttons.$btn-border-radius,
                buttons.$btn-line-height
        );
        @include transition.transition(buttons.$btn-transition);

        &.btn-with-icon {
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: center;

            .mdi-icon,
            .custom-icon {
                margin-right: 0.5em;
            }
        }

        &:hover {
            color: body.$body-color;
            text-decoration: if(links.$link-hover-decoration == underline, none, null);
            // DO NOT USE box-shadow() MIXIN HERE!
            box-shadow: buttons.$btn-hover-box-shadow;
        }

        &:focus,
        &.focus {
            outline: 0;
            // DO NOT USE box-shadow() MIXIN HERE!
            box-shadow: buttons.$btn-focus-box-shadow;
        }

        &:active,
        &.active {
            // DO NOT USE box-shadow() MIXIN HERE!
            box-shadow: buttons.$btn-active-box-shadow;

            &:focus {
                // DO NOT USE box-shadow() MIXIN HERE!
                box-shadow: buttons.$btn-active-box-shadow;
            }
        }

        &:disabled,
        &.disabled,
        fieldset:disabled & {
            pointer-events: auto;
            cursor: not-allowed;
            opacity: buttons.$btn-disabled-opacity;
            // THIS IS CORRECT!
            @include box-shadow.box-shadow(buttons.$btn-box-shadow);
        }
    }

    //
    // Outline variations
    //

    [class*='btn-outline-'] {
        box-shadow: none;
        @include buttons-mixins.button-outline-size(
                buttons.$btn-outline-padding-top,
                buttons.$btn-outline-padding-x,
                buttons.$btn-outline-padding-bottom,
                buttons.$btn-outline-padding-x,
                buttons.$btn-font-size
        );

        &:hover {
            box-shadow: none;
            text-decoration: none;
        }

        &:focus,
        &.focus {
            box-shadow: none;
            text-decoration: none;
        }

        &:active,
        &.active {
            box-shadow: none;

            &:focus {
                box-shadow: none;
            }
        }

        &:disabled,
        &.disabled,
        fieldset:disabled & {
            box-shadow: none;
        }

        &.btn-lg {
            @include buttons-mixins.button-outline-size(
                    buttons.$btn-outline-padding-top-lg,
                    buttons.$btn-outline-padding-x-lg,
                    buttons.$btn-outline-padding-bottom-lg,
                    buttons.$btn-outline-padding-x-lg,
                    buttons.$btn-font-size-lg
            );
        }

        &.btn-sm {
            @include buttons-mixins.button-outline-size(
                    buttons.$btn-outline-padding-top-sm,
                    buttons.$btn-outline-padding-x-sm,
                    buttons.$btn-outline-padding-bottom-sm,
                    buttons.$btn-outline-padding-x-sm,
                    buttons.$btn-font-size-sm
            );
        }
    }

    //
    // Alternate buttons
    //

    // scss-docs-start btn-variant-loops
    @each $color, $value in color-lists.$button-colors {
        .btn-#{$color} {
            @include buttons-mixins.button-variant($value, $value);
        }
    }

    @each $color, $value in color-lists.$button-outline-colors {
        .btn-outline-#{$color} {
            @include buttons-mixins.button-outline-variant($value);
        }
    }

    // scss-docs-start btn-variant-loops

    //
    // Button block
    //

    .btn-block {
        display: block;
        width: 100%;

        // Vertically space out multiple block buttons
        + .btn-block {
            margin-top: buttons.$btn-block-spacing-y;
        }
    }

    //
    // Link buttons
    //

    // Make a button look and behave like a link
    .btn-link {
        padding: buttons.$btn-link-padding;
        box-shadow: none;
        @include rfs.font-size(buttons.$btn-link-font-size);
        font-weight: buttons.$btn-link-font-weight;
        color: buttons.$btn-link-color;
        text-decoration: buttons.$btn-link-decoration;
        text-transform: buttons.$btn-link-text-transform;

        &:hover,
        &:focus,
        &.focus,
        &:active,
        &:active:focus,
        &.active,
        &.active:focus {
            box-shadow: none;
            text-decoration: buttons.$btn-link-hover-decoration;
            background-color: buttons.$btn-link-hover-bg;
        }

        &:hover {
            color: buttons.$btn-link-hover-color;
        }

        &:disabled,
        &.disabled {
            box-shadow: none;
            color: buttons.$btn-link-disabled-color;
        }

        &.text-decoration-reversed {
            text-decoration: if(buttons.$btn-link-decoration == underline, none, underline);

            &:hover {
                text-decoration: buttons.$btn-link-decoration;
            }
        }

        &.text-decoration-hover-underline:hover {
            text-decoration: underline !important;
        }

        &.text-decoration-hover-none:hover {
            text-decoration: none !important;
        }
    }

    //
    // Button Sizes
    //

    .btn-lg {
        @include buttons-mixins.button-size(
                buttons.$btn-padding-top-lg,
                buttons.$btn-padding-x-lg,
                buttons.$btn-padding-bottom-lg,
                buttons.$btn-padding-x-lg,
                buttons.$btn-font-size-lg,
                buttons.$btn-font-weight-lg,
                buttons.$btn-border-radius-lg,
                buttons.$btn-line-height-lg
        );
    }

    .btn-sm {
        @include buttons-mixins.button-size(
                buttons.$btn-padding-top-sm,
                buttons.$btn-padding-x-sm,
                buttons.$btn-padding-bottom-sm,
                buttons.$btn-padding-x-sm,
                buttons.$btn-font-size-sm,
                buttons.$btn-font-weight-sm,
                buttons.$btn-border-radius-sm,
                buttons.$btn-line-height-sm
        );
    }

    //
    // Rounded button
    // Must be after all other variations.
    //

    .btn-rounded {
        border-radius: buttons.$btn-rounded-border-radius;
    }
}
